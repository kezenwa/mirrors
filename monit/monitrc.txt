###################################################
#### littlebizzy production /etc/monit/monitrc ####
###################################################
set daemon 300
    with start delay 240
set logfile /var/log/monit.log
set pidfile /var/run/monit.pid
set idfile /var/lib/monit/id
set statefile /var/lib/monit/state
# set limits {
#     programOutput:     512 B,    # check program's output truncate limit
#     sendExpectBuffer:  256 B,    # limit for send/expect protocol test
#     fileContentBuffer: 512 B,    # limit for file content test
#     httpContentBuffer: 1 MB,     # limit for HTTP content test
#     networkTimeout:    5 seconds # timeout for network I/O
# }
set ssl {
    verify     : disable,
    selfsigned : allow
}
set mailserver smtp.sendgrid.net port 587
    username "monit" password "bullet"
set alert info@littlebizzy.com
# set alert info@littlebizzy.com not on { instance, action }
set eventqueue
    basedir /var/lib/monit/events
    slots 100
##
## set mail-format {
##   from:    monit@$HOST
##   subject: monit alert --  $EVENT $SERVICE
##   message: $EVENT Service $SERVICE
##                 Date:        $DATE
##                 Action:      $ACTION
##                 Host:        $HOST
##                 Description: $DESCRIPTION
##
##            Your faithful employee,
##            Monit
## }
##
## web interface ##  
set httpd port 2812
    with ssl {
        pemfile: /etc/ssl/nginx.pem
        selfsigned: allow
     }
    allow admin:monit
##
#### check system health ####
check system localhost
if loadavg (1min) > 2 then alert
if loadavg (5min) > 1 then alert
if cpu usage > 50% for 10 cycles then alert
if memory usage > 75% then alert
if swap usage > 25% then alert
if space usage is greater than 75% for 5 cycles then alert
##
## Check if a file exists, checksum, permissions, uid and gid. In addition
## to alert recipients in the global section, customized alert can be sent to
## additional recipients by specifying a local alert handler. The service may
## be grouped using the GROUP option. More than one group can be specified by
## repeating the 'group name' statement.
#
#  check file apache_bin with path /usr/local/apache/bin/httpd
#    if failed checksum and
#       expect the sum 8f7f419955cefa0b33a2ba316cba3659 then unmonitor
#    if failed permission 755 then unmonitor
#    if failed uid root then unmonitor
#    if failed gid root then unmonitor
#    alert security@foo.bar on {
#           checksum, permission, uid, gid, unmonitor
#        } with the mail-format { subject: Alarm! }
#    group server
#
#  check process apache with pidfile /usr/local/apache/logs/httpd.pid
#    start program = "/etc/init.d/httpd start" with timeout 60 seconds
#    stop program  = "/etc/init.d/httpd stop"
#    if cpu > 60% for 2 cycles then alert
#    if cpu > 80% for 5 cycles then restart
#    if totalmem > 200.0 MB for 5 cycles then restart
#    if children > 250 then restart
#    if loadavg(5min) greater than 10 for 8 cycles then stop
#    if failed host www.tildeslash.com port 80 protocol http
#       and request "/somefile.html"
#    then restart
#    if failed port 443 protocol https with timeout 15 seconds then restart
#    if 3 restarts within 5 cycles then unmonitor
#    depends on apache_bin
#    group server
#
## Check a remote host availability by issuing a ping test and check the
## content of a response from a web server. Up to three pings are sent and
## connection to a port and an application level network check is performed.
#
#  check host myserver with address 192.168.1.1
#    if failed ping then alert
#    if failed port 3306 protocol mysql with timeout 15 seconds then alert
#    if failed port 80 protocol http
#       and request /some/path with content = "a string"
#    then alert
